---
roles:
  master_base:
    synced_folders:
      - host_path:  'puppet'
        guest_path: '/tmp/puppet'
    provisioners:
      - type: shell
        inline: "x=`/opt/puppetlabs/bin/puppet config print basemodulepath`;/opt/puppetlabs/bin/puppet config set basemodulepath ${x}:/tmp/puppet/modules"
      - type: shell
        inline: '/opt/puppetlabs/bin/puppet module install puppetlabs/stdlib --version 4.4.0'
      - type: shell
        inline: '/bin/cp /tmp/puppet/manifests/site.pp /etc/puppetlabs/code/environments/production/manifests/site.pp'
      - type: shell
        inline: 'service pe-puppetserver restart'

  master:
    provisioners:
      - type: hosts
      - type: shell
        inline: 'mkdir -p /etc/puppetlabs/code/environments/production/hieradata/; cp /vagrant/hierafiles/defaults.yaml /etc/puppetlabs/code/environments/production/hieradata/common.yaml'
      - type: pe_bootstrap
        role: :master
#        version: '3.2.0'

  windows_agent:
    guest: windows
    private_networks:
      - {ip: '0.0.0.0', auto_network: true}
    provisioners:
      - {type: hosts}
      - type: pe_bootstrap
        version: '3.2.0'
        master: 'puppet-master'

  agent:
    provisioners:
      - {type: shell, inline: "echo 'nameserver 8.8.8.8' > /etc/resolv.conf"}
      - {type: hosts}
      - type: pe_agent
        master: 'puppet-master'

  dhcp_nat-el6:
    provisioners:
      - type: shell
        inline: 'iptables -F'
      - type: shell
        inline: 'iptables --table nat --append POSTROUTING --out-interface eth0 -j MASQUERADE'
      - type: shell
        inline: 'service iptables save'
      - type: shell
        inline: 'service iptables restart'
  dhcp_nat-el7:
    provisioners:
      - type: shell
        # This default zone will open all ports, so we can get proper traffic
        # forwarding
        inline: 'firewall-cmd --set-default-zone=trusted'
      - type: shell
        # This is needed to send large files to the new node from Razor server
        inline: 'firewall-cmd --zone=trusted --add-masquerade --permanent'
      - type: shell
        inline: 'firewall-cmd --reload'
